basePath: /
definitions:
  handlers.CheckResponse:
    properties:
      token:
        $ref: '#/definitions/handlers.shortToken'
        type: object
      v:
        description: API version
        type: string
    type: object
  handlers.CreateResponse:
    properties:
      token:
        type: string
      v:
        description: API version
        type: string
    type: object
  handlers.HealthResponse:
    properties:
      Health:
        $ref: '#/definitions/handlers.health'
        type: object
      v:
        description: API version
        type: string
    type: object
  handlers.PingResponse:
    properties:
      ping:
        $ref: '#/definitions/handlers.ping'
        type: object
      v:
        description: API version
        type: string
    type: object
  handlers.RefreshResponse:
    properties:
      token:
        type: string
      v:
        description: API version
        type: string
    type: object
  handlers.RemoveResponse:
    properties:
      status:
        type: string
      v:
        description: API version
        type: string
    type: object
  handlers.ResponseData:
    properties:
      data:
        type: string
      status:
        type: integer
    type: object
  handlers.health:
    properties:
      alive:
        type: boolean
    type: object
  handlers.ping:
    properties:
      id:
        type: string
      service:
        type: string
      time:
        type: string
    type: object
  handlers.shortToken:
    properties:
      permissions:
        items:
          type: string
        type: array
      role:
        type: string
      user_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Auth, create tokens, and refresh old
  license: {}
  title: Service Auth API
  version: "1.0"
paths:
  /_/health:
    get:
      consumes:
      - application/json
      operationId: get-service-health
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
            type: object
      summary: Show health service
  /_/ping:
    get:
      consumes:
      - application/json
      operationId: ping-service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.PingResponse'
            type: object
      summary: Ping service
  /token.check:
    get:
      consumes:
      - application/json
      description: Check access_token
      operationId: refresh-token
      parameters:
      - description: service version
        in: query
        name: v
        type: string
      - description: access_token
        in: query
        name: access_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CheckResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseData'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseData'
            type: object
      summary: Deactivate old token and create new
  /token.create:
    get:
      consumes:
      - application/json
      description: Generate new access_token and refresh_token
      operationId: create-token
      parameters:
      - description: service version
        in: query
        name: v
        type: string
      - description: user email
        in: query
        name: email
        required: true
        type: string
      - description: user password
        in: query
        name: password
        required: true
        type: string
      - description: 'permissions, to check on authorization and request if necessary
          (Example: email,notif)'
        in: query
        name: scope
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CreateResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseData'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseData'
            type: object
      summary: Create new token
  /token.refresh:
    get:
      consumes:
      - application/json
      description: Generate new access_token and refresh_token
      operationId: refresh-token
      parameters:
      - description: service version
        in: query
        name: v
        type: string
      - description: refresh_token
        in: query
        name: refresh_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RefreshResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseData'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseData'
            type: object
      summary: Deactivate old token and create new
  /token.remove:
    get:
      consumes:
      - application/json
      description: Remove access_token or revome all tokens from this user
      operationId: remove-token
      parameters:
      - description: service version
        in: query
        name: v
        type: string
      - description: user access_token
        in: query
        name: access_token
        type: string
      - description: remove all tokens
        in: query
        name: all
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RemoveResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseData'
            type: object
      summary: Remove token or all
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
