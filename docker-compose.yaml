version: '3.7'

volumes:
  esdata01:
    driver: local

services:
  service-auth:
    image: eu.gcr.io/anibe-2bcf3/service-auth:${SERVICE_AUTH_TAG:-latest}
    restart: on-failure
    depends_on:
      - postgres
    env_file:
      - .env

  service-anime:
    image: eu.gcr.io/anibe-2bcf3/service-anime:${SERVICE_ANIME_TAG:-latest}
    restart: on-failure
    depends_on:
      - postgres
    env_file:
      - .env

  service-account:
    image: eu.gcr.io/anibe-2bcf3/service-account:${SERVICE_ACCOUNT_TAG:-latest}
    restart: on-failure
    depends_on:
      - postgres
    env_file:
      - .env

  service-users:
    image: eu.gcr.io/anibe-2bcf3/service-users:${SERVICE_USERS_TAG:-latest}
    restart: on-failure
    depends_on:
      - postgres
    env_file:
      - .env

# ==================
# important services
# ==================

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
#    restart: on-failure
#    environment:
#      - discovery.type=single-node
#      - cluster.name=docker-cluster
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    volumes:
#      - esdata01:/usr/share/elasticsearch/data
#    deploy:
#      replicas: 1
#      restart_policy:
#        condition: on-failure
#        delay: 10s
#        max_attempts: 3
#      placement:
#        constraints: [node.role == worker]

  postgres:
    image: postgres
    restart: on-failure
    volumes:
      - /var/lib/postgresql/micro-data:/var/lib/postgresql/data
    env_file:
      - .env

  nginx:
    image: eu.gcr.io/anibe-2bcf3/nginx:${NGINX_TAG:-latest}
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - 80:80
    depends_on:
      - service-auth
      - service-anime
      - service-users
      - service-account